name: A workflow that automates the data pipeline deployment
on: 
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore: 
      - '.gitignore'
      - '*.png'
      - 'README.md'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '*.png'
      - 'README.md'

jobs:
  # detect:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 2
  #   - name: Get changed files in the directory
  #     id: changed-files-specific
  #     uses: tj-actions/changed-files@v34
  #     # with:
  #     #   files: |
  #     #     pipelines/**
  #   - name: Get the folder name
  #     id: get-folder-name
  #     # working-directory: pipelines
  #     run: |
  #       JSON="["
  #       for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
  #           dir="$(cut -d'/' -f2 <<<"$file")" # always get the secondary folder from the working directory
  #           JSONline="\"$dir\","
  #           # we don't need to iterate on the same directory over and over, so
  #           # only include it when it wasn't included
  #           if [[ "$JSON" != *"$JSONline"* ]]; then
  #             JSON="$JSON$JSONline"
  #           fi
  #       done
  #       # Updates all artifacts if template or utils fiel is updated 
  #       if [[ "$JSON" == *"template.yml"*  || "$JSON" == *"utils.py"*  ]]; then
  #         ALLDICTS="["
  #         for dir in */; do
  #           if [[ "$dir" != *"infra"*  && "$dir" != *"functions"*  ]]; then
  #             JSONline="\"${dir%/}\","
  #             ALLDICTS="$ALLDICTS$JSONline"
  #           fi
  #         done
  #         JSON="$ALLDICTS"
  #       fi
  #       # Remove last "," and add the closing bracket
  #       if [[ $JSON == *, ]]; then
  #           JSON="${JSON%?}"
  #       fi
  #       JSON="$JSON]"
  #       echo "folders=$( echo "$JSON" )" >> $GITHUB_OUTPUT
  #       echo $JSON
  #   outputs:
  #     matrix: ${{ steps.get-folder-name.outputs.folders }}
  
  deploy:
    # if: ${{ needs.detect-changed-files.outputs.matrix != '[]' && needs.detect-changed-files.outputs.matrix != '' }} # only execute the job when there is any change
    container: 
      image: lambci/lambda:build-python3.8
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false # will NOT cancel all in-progress and queued jobs in the matrix if any job in the matrix fails
    #   matrix:
    #     folder: ${{ fromJSON(needs.detect-changed-files.outputs.matrix) }}
    steps:
      - name: Set Environment
        id: setenv
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::prod"
          else
             echo "::set-output name=env_name::dev"
          fi
      - name: Set Repo
        id: setrepo
        run: |
          echo "::set-output name=repo_name::${{ github.event.repository.name }}"
      - name: Set Branch
        id: setbranch
        run: |
          echo "::set-output name=branch_name::${{ github.head_ref}}"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
          # role-to-assume: arn:aws:iam::807324965916:role/cdk-hnb659fds-deploy-role-807324965916-us-east-1
          role-duration-seconds: 900
      - name: Install sam cli
        run: 'pip3 install aws-sam-cli'
      - name: Copy utils.py
        run: 'for d in */; do cp utils.py "$d"; done'
      - name: build
        run: sam build && sam package --s3-bucket mother-blooding-bucket --s3-prefix "${{steps.setrepo.outputs.repo_name}}/${{steps.setbranch.outputs.branch_name}}/${{steps.setenv.outputs.env_name}}" --output-template-file cfn-packaged.yaml --region us-east-1 || { echo 'my_command failed' ; exit 1; }
      - name: deploy
        run: sam deploy --template-file cfn-packaged.yaml --s3-bucket mother-blooding-bucket --s3-prefix "${{steps.setrepo.outputs.repo_name}}/${{steps.setbranch.outputs.branch_name}}/${{steps.setenv.outputs.env_name}}" --stack-name "${{steps.setrepo.outputs.repo_name}}-${{steps.setenv.outputs.env_name}}-stack" --capabilities CAPABILITY_AUTO_EXPAND --region us-east-1 --no-fail-on-empty-changeset --parameter-overrides Environment=${{steps.setenv.outputs.env_name}} || { echo 'my_command failed' ; exit 1; }
